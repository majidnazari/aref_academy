#region AbsencePresence
      createAbsencePresence(input: CreateAbsencePresenceInput! @spread): AbsencePresence!  @can(ability: "create") @guard(with:["api"]) @field(resolver: "App\\GraphQL\\Mutations\\AbsencePresence\\CreateAbsencePresence@resolver")
      createAllStudentToListBeforeAbsencePresence(input: CreateStudentToListBeforeAbsencePresenceInput! @spread): String   @guard(with:["api"]) @field(resolver: "App\\GraphQL\\Mutations\\AbsencePresence\\CreateAbsencePresence@resolverAbsencePresenceAllSession")
      updateAbsencePresence(input: UpdateAbsencePresenceInput! @spread): AbsencePresence!  @can(ability: "update") @guard(with:["api"]) @field(resolver: "App\\GraphQL\\Mutations\\AbsencePresence\\UpdateAbsencePresence@resolver")
      updateAbsencePresenceWithStudentIdCourseSessionId(input: UpdateAbsencePresenceInputWithStudentIdCourseSessionId! @spread): AbsencePresence!  @can(ability: "update") @guard(with:["api"]) @field(resolver: "App\\GraphQL\\Mutations\\AbsencePresence\\UpdateAbsencePresence@UpdateAbsencePresenceWithStudentIdCourseSessionId")
      deleteAbsencePresence(id:ID!):AbsencePresence  @can(ability: "delete") @guard(with:["api"]) @field(resolver: "App\\GraphQL\\Mutations\\AbsencePresence\\DeleteAbsencePresence@resolver")
    #end AbsencePresence